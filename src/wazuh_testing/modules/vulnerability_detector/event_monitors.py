# Copyright (C) 2015-2023, Wazuh Inc.
# Created by Wazuh, Inc. <info@wazuh.com>.
# This program is free software; you can redistribute it and/or modify it under the terms of GPLv2

from wazuh_testing.constants.paths.logs import WAZUH_LOG_PATH, ALERTS_JSON_PATH
from wazuh_testing.modules.vulnerability_detector import patterns as cb
from wazuh_testing.tools.file_monitor import FileMonitor
from wazuh_testing.utils.callbacks import generate_callback


def check_event(pattern, replacement=None, file_monitor=None, timeout=10):
    """Check if an event is detected in the monitored file.

    Args:
        pattern (str): regex used to match in file
        replacement (dict): Dictionary with replacements for regex
        file_monitor (FileMonitor): FileMonitor object with file to monitor set.
        timeout (int): timeout for file_monitor to check for events.
    """
    log_monitor = file_monitor if file_monitor is not None else FileMonitor(WAZUH_LOG_PATH)
    
    callback = generate_callback(regex=pattern, replacement=replacement)
    log_monitor.start(timeout=timeout, callback=callback)
    
    return log_monitor.callback_result

def check_cve_affects_package_log(agent_id, package, cve, timeout=10):
    """Check if inserted vulnerable packages are reported by vulnerability detector.

    Args:
        package (str): Name of custom package to check. Example: 'firefox-0'
        cve (str): Package CVE. Example: 'CVE-2019-11764'
        agent_id (str): Agent ID.
    """    
    log_monitor = FileMonitor(WAZUH_LOG_PATH)
    replacement={"agent_id": agent_id, "package": package, "cve": cve}
    return check_event(pattern=cb.CVE_AFFECTS_PACKAGE, replacement=replacement , file_monitor=log_monitor,
                       timeout=timeout)

def check_cve_affects_package_alert(agent_id, package, cve, timeout=10):
    """Check if inserted vulnerable packages are reported by vulnerability detector.

    Args:
        package (str): Name of custom package to check. Example: 'firefox-0'
        cve (str): Package CVE. Example: 'CVE-2019-11764'
        agent_id (str): Agent ID.
    """    
    log_monitor = FileMonitor(ALERTS_JSON_PATH)
    replacement={"agent_id": agent_id, "package": package, "cve": cve}
    return check_event(pattern=cb.CVE_AFFECTS_AGENT_ALERT, replacement=replacement , file_monitor=log_monitor,
                       timeout=timeout)
    
